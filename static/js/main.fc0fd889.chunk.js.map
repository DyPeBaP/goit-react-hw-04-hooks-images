{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","service/Api.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","value","setValue","className","s","e","preventDefault","trim","toast","error","position","autoClose","theme","type","SearchButton","SearchForm","autoComplete","placeholder","onChange","target","ImageGalleryItem","webformatURL","showImageHandle","src","alt","ImageGalleryItemImage","onClick","propType","PropTypes","string","isRequired","func","ImageGallery","images","showImageHandler","map","index","id","largeImageURL","shortid","generate","Button","loadMoreHandler","modalRoot","document","querySelector","Modal","onClose","largeImgURL","useEffect","keyDownHandler","code","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","Loader","color","height","width","fetchImages","searchItem","page","a","fetch","rawResult","ok","json","result","App","setImages","searchImage","setSearchImage","openModal","setOpenModal","isLoading","setIsLoading","setPage","setError","setLargeImgURL","maxPages","setMaxPages","searchImagesHandler","hits","totalHits","length","info","console","toString","scrollTo","top","documentElement","scrollHeight","behavior","scrollToHandler","setTimeout","searchString","imageUrl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc0fd889.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3DVwH\",\"SearchForm\":\"Searchbar_SearchForm__3Xgd3\",\"SearchButton\":\"Searchbar_SearchButton__1rNbm\",\"animate\":\"Searchbar_animate__1xKCD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1VNgL\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2CFLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__27yZZ\",\"Modal\":\"Modal_Modal__1iyvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2wArL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__29YcQ\",\"animate\":\"Button_animate__2tdYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2WvBN\"};","import s from \"./Searchbar.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from \"react\";\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (value.trim() === \"\") {\r\n      toast.error(\"Please enter your search term!\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        theme: \"dark\",\r\n      });\r\n      return;\r\n    }\r\n    onSubmit(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchButton}>\r\n          Search\r\n        </button>\r\n        <input\r\n          className={s.SearchForm}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n          value={value}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import s from \"./ImageGalleryItem.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ webformatURL, showImageHandle }) => {\r\n      return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          src={webformatURL}\r\n          alt=\"\"\r\n          className={s.ImageGalleryItemImage}\r\n          onClick={showImageHandle}\r\n        />\r\n      </li>\r\n    );\r\n  };\r\n\r\nImageGalleryItem.propType = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  showImageHandle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import s from \"./ImageGallery.module.css\";\r\nimport React from \"react\";\r\nimport propTypes from 'prop-types';\r\nimport shortid from \"shortid\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, showImageHandler }) => {\r\n      return (\r\n      <ul className={s.ImageGallery}>\r\n        {images.map(({ id, webformatURL, largeImageURL }, index) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={shortid.generate()}\r\n              webformatURL={webformatURL}\r\n              showImageHandle={showImageHandler(largeImageURL)}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: propTypes.array,\r\n  showImageHandler: propTypes.func,\r\n};\r\n\r\nexport default ImageGallery;","import s from \"./Button.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ loadMoreHandler }) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={s.Button}\r\n        onClick={loadMoreHandler}\r\n      >\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n\r\nButton.propType = {\r\n  loadMoreHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import s from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClose, largeImgURL }) {\r\n  useEffect(() => {\r\n    const keyDownHandler = (e) => {\r\n      if (e.code === \"Escape\") {\r\n        onClose();\r\n        return;\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", keyDownHandler);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", keyDownHandler);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const clickOverlay = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={clickOverlay}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImgURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImgURL: PropTypes.string.isRequired,\r\n};\r\n","import s from \"./Loader.module.css\";\r\nimport Spinner from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={s.Loader}>\r\n      <Spinner type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","const API_KEY = `23121176-a6e266cf1dd110f625e6378e3`;\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\n\r\nconst fetchImages = async (searchItem, page) => {\r\n  const rawResult = await fetch(\r\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n\r\n  if (!rawResult.ok) {\r\n    throw rawResult;\r\n  }\r\n\r\n  const result = await rawResult.json();\r\n\r\n  return result;\r\n};\r\n\r\nexport default fetchImages;","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nimport fetchImages from \"./service/Api\";\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [searchImage, setSearchImage] = useState(\"\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [largeImgURL, setLargeImgURL] = useState(\"\");\r\n  const [maxPages, setMaxPages] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!searchImage) return;\r\n\r\n    const searchImagesHandler = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const { hits, totalHits } = await fetchImages(searchImage, page);\r\n        if (!hits.length) {\r\n          toast.info(`Nothing found for ${searchImage}!`, {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            theme: \"dark\",\r\n          });\r\n        }\r\n        setImages((images) => [...images, ...hits]);\r\n        setMaxPages(totalHits);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(() => error.toString());\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    searchImagesHandler();\r\n  }, [page, searchImage]);\r\n\r\n  useEffect(() => {\r\n    if (images.length > 12) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }, [images.length]);\r\n\r\n  const showImageHandler = (imageUrl) => () => {\r\n    setLargeImgURL(imageUrl);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const scrollToHandler = () => {\r\n    const top = document.documentElement.scrollHeight - 150;\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        top,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const loadMoreHandler = () => {\r\n    setPage((page) => page + 1);\r\n    scrollToHandler();\r\n  };\r\n\r\n  const onSubmitHandler = (searchString) => {\r\n    setSearchImage(searchString);\r\n    setImages([]);\r\n    setPage(1);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(!openModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} />\r\n      <Searchbar onSubmit={onSubmitHandler} />\r\n\r\n      {error ? (\r\n        <p>{error}</p>\r\n      ) : (\r\n        <ImageGallery\r\n          images={images}\r\n          showImageHandler={showImageHandler}\r\n          scrollToHandler={scrollToHandler}\r\n        />\r\n      )}\r\n      {openModal && (\r\n        <Modal largeImgURL={largeImgURL} onClose={closeModal}></Modal>\r\n      )}\r\n      {isLoading && <Loader />}\r\n      {page < maxPages && <Button loadMoreHandler={loadMoreHandler} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}